@model MvcApplication1.Areas.Mobile.ViewModels.UpdateCreditCardViewModel
@{
    ViewBag.Title = "UpdateCard";
}

<div class="container-fluid">
    <div class="container">
        <h1 class=" title_login">Payment Information</h1>
        @if (!string.IsNullOrEmpty(Model.Message))
        {
            <div class="row">
                <div class="col-xs-12">
                    <div class="container">
                        @Html.MessageBox(Model.Message, Model.MessageType)
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <div class="form-group">
                @using (Html.BeginForm("UpdateCard", "Payment", FormMethod.Post, new { @novalidate = "novalidate", autocomplete = "off" }))
                {
                    @Html.HiddenFor(a => a.ReturnUrl)
                    <div class="col-xs-12">
                        <label>Select Card Type </label>
                        @Html.DropDownListFor(a => a.CardType, new SelectList(PaymentSettings.CardTypeList), "Select card type", new { @class = "form-control" })
                        @Html.ValidationMessageFor(a => a.CardType)
                        <p class="top_title pull-left">EXTRA 50¢ WILL BE CHARGED FOR AMEX CREDIT CARD.</p>
                    </div>
                    <div class="form-group ">

                        <div class="col-xs-12 form_mar ">
                            <label>Card Number </label>
                            @Html.TextBoxFor(a => a.CreditCardNumber, new { @class = "form-control cc-number-val", @placeholder = "Card Number", @type = "tel" })
                            @Html.ValidationMessageFor(a => a.CreditCardNumber)
                        </div>


                    </div>
                    <div class="form-group ">
                        <div class="col-xs-10">
                            <label>Expiration Date </label>
                        </div>
                        <div class="col-xs-6 ">
                            @Html.DropDownListFor(a => a.ExpMonth, new SelectList(PaymentSettings.ExpMonthsList), "Month", new { @class = "form-control" })
                            @Html.ValidationMessageFor(a => a.ExpMonth)
                        </div>
                        <div class="col-xs-6">
                            @Html.DropDownListFor(a => a.ExpYear, new SelectList(PaymentSettings.ExpYearsList), "Year", new { @class = "form-control" })
                            @Html.ValidationMessageFor(a => a.ExpYear)
                        </div>
                        
                    </div>
                    <div class="form-group">
                        <div class="col-xs-10 mar_top">
                            <label>Card Verification Value </label>
                        </div>
                        <div class="col-xs-10 col-sm-7 ">
                            @Html.TextBoxFor(a => a.Cvv, new { @class = "form-control cc-cvc", @placeholder = "Cvv number", @type = "Password", autocomplete = "off" })
                            @Html.ValidationMessageFor(a => a.Cvv)
                        </div>
                        <div class="col-xs-2 col-sm-5">
                            <h5><a href="#" data-toggle="modal" data-target="#cvv_no">
                                <div class="info_icon"></div>
                            </a></h5>
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <button type="submit" class="btn btn-primary btn-block form_mar btn_bgreen">Submit<span class=" btn_next fa fa-chevron-right"></span></button>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.BackButtonUrl))
                {
                    <div class="col-xs-12">
                        <a href="@Model.BackButtonUrl" class="btn btn-primary btn-block form_mar btn_bgray"><span class=" btn_prev fa fa-chevron-left"></span>Back</a>
                    </div>
                }
            </div>
        </div>
        @RenderPage("~/Areas/Mobile/Views/UiControls/WhatIsCvv.cshtml")
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        (function () {
            jQuery.validator.addMethod("MatchWithCardType", function (value, element, params) {
                debugger;
                var dependentProperty = $("#CardType").val().toLowerCase();
                var cardType = $.payment.cardType($('.cc-number-val').val());
                var isCardValid = $.payment.validateCardNumber($('.cc-number-val').val());
                if (isCardValid && (dependentProperty === cardType)) {
                    return true;
                }
                return false;
            });

            // code based on link
            var setValidationValues = function (options, ruleName, value) {
                options.rules[ruleName] = value;
                if (options.message) {
                    options.messages[ruleName] = options.message;
                }
            };

            var $Unob = $.validator.unobtrusive;

            $Unob.adapters.add("MatchWithCardType", ["dependentproperty", "dependentvalue"], function (options) {
                var value = {
                    dependentproperty: options.params.dependentproperty,
                    dependentvalue: options.params.dependentvalue
                };
                setValidationValues(options, "MatchWithCardType", value);

            });
        })();
    </script>
}

